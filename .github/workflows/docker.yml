name: Docker

on:
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  container_arch_build:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            tag: amd64

          - target: armv7-unknown-linux-gnueabihf
            tag: arm64

    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: TARGET=${{ matrix.target }}
          tags: ${{ matrix.tag }}

  manifest_release:
    name: Create Manifest Release
    needs: [container_arch_build]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup | Release notes
        run: |
          docker manifest create "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" \
            --amend "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:amd64" \
            --amend "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:arm64"

          docker manifest annotate "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:amd64" --os linux --arch amd64
          docker manifest annotate "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:arm64" --os linux --arch arm64
          docker manifest push --purge "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
